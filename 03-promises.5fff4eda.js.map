{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAASC,GAClEA,EAAMC,iBAEN,MAAMC,EAAQC,SAASN,SAASC,cAAc,kBAAkBM,OAC1DC,EAAOF,SAASN,SAASC,cAAc,iBAAiBM,OACxDE,EAASH,SAASN,SAASC,cAAc,mBAAmBM,OAElE,IAAIG,EAAeL,EAEnB,IAAK,IAAIM,EAAI,EAAGA,GAAKF,EAAQE,IAC3BrB,EAAcqB,EAAGD,GACdE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBxB,QAAiBC,MAAU,IAGzEwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,sBAAoBxB,QAAeC,MAAU,IAIzEkB,GAAgBF,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function(event) {\n  event.preventDefault();\n\n  const delay = parseInt(document.querySelector('[name=\"delay\"]').value);\n  const step = parseInt(document.querySelector('[name=\"step\"]').value);\n  const amount = parseInt(document.querySelector('[name=\"amount\"]').value);\n\n  let currentDelay = delay;\n\n  for (let i = 1; i <= amount; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        \n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n       \n      });\n\n    currentDelay += step;\n  }\n});\n\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","currentDelay","i","then","$parcel$interopDefault","Notify","failure","catch"],"version":3,"file":"03-promises.5fff4eda.js.map"}